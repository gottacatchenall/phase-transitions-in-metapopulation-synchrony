locations = runif(n_pops*2)
dim(locations) = c(n_pops,2)
df = simulate_occupancy(environment_across_sites,0.1, 0.75, num_data_points=50)
df %>% glimpse()
post = sampler(df, 1000)
hist(post$mu, breaks=25)
hist(post$sigma, breaks=25)
plot(seq(1,length(post$l)) , log(post$l) )
sampler = function(df, n_steps){
pi_sigma = rep(0,n_steps)
pi_mu = rep(0,n_steps)
pi_likelihood = rep(0,n_steps)
pi_bf = rep(0,n_steps)
pi_sigma[1] = rexp(1)
pi_mu[1] = runif(1)
pi_likelihood[1] = (compute_likelihood_on_data(df, pi_sigma[1], pi_mu[1]))
pi_bf[1] = pi_likelihood[1] *dexp(pi_sigma[1])*dnorm(pi_mu[1], sd=pi_sigma[1])
for (s in 2:n_steps){
pi_sigma[s] = pi_sigma[s-1]
pi_mu[s] = pi_mu[s-1]
pi_likelihood[s] = pi_likelihood[s-1]
pi_bf[s] = pi_bf[s-1]
proposed_mu = runif(1)
proposed_sigma = rexp(1)
proposed_likelihood = compute_likelihood_on_data(df, proposed_sigma, proposed_mu)
proposed_bayes_factor = proposed_likelihood * dexp(proposed_sigma) * dnorm(proposed_mu, sd=proposed_sigma)
old_bayes_factor = pi_bf[s-1]
u = runif(1)
temp = 1
p = exp((-1*(old_bayes_factor/proposed_bayes_factor) *  temp))
if (!is.na(p)){
if (u < p){
pi_sigma[s] = proposed_sigma
pi_mu[s] = proposed_mu
pi_likelihood[s] = proposed_likelihood
pi_bf[s] = proposed_bayes_factor
}
}
if (s %% 100 == 0){
print(paste(s, "/", n_steps))
}
}
posterior = data.frame(mu=pi_mu, sigma=pi_sigma, l=pi_likelihood)
return(posterior)
}
n_pops = 20
environment_across_sites = runif(n_pops)
locations = runif(n_pops*2)
dim(locations) = c(n_pops,2)
df = simulate_occupancy(environment_across_sites,0.1, 0.75, num_data_points=50)
df %>% glimpse()
post = sampler(df, 1000)
hist(post$mu, breaks=25)
hist(post$sigma, breaks=25)
plot(seq(1,length(post$l)) , log(post$l) )
sampler = function(df, n_steps){
pi_sigma = rep(0,n_steps)
pi_mu = rep(0,n_steps)
pi_likelihood = rep(0,n_steps)
pi_bf = rep(0,n_steps)
pi_sigma[1] = rexp(1)
pi_mu[1] = runif(1)
pi_likelihood[1] = (compute_likelihood_on_data(df, pi_sigma[1], pi_mu[1]))
pi_bf[1] = pi_likelihood[1] *dexp(pi_sigma[1])*dnorm(pi_mu[1], sd=pi_sigma[1])
for (s in 2:n_steps){
pi_sigma[s] = pi_sigma[s-1]
pi_mu[s] = pi_mu[s-1]
pi_likelihood[s] = pi_likelihood[s-1]
pi_bf[s] = pi_bf[s-1]
proposed_mu = runif(1)
proposed_sigma = rexp(1)
proposed_likelihood = compute_likelihood_on_data(df, proposed_sigma, proposed_mu)
proposed_bayes_factor = proposed_likelihood * dexp(proposed_sigma) * dnorm(proposed_mu, sd=proposed_sigma)
old_bayes_factor = pi_bf[s-1]
u = runif(1)
temp = 1
p = exp((-1*(old_bayes_factor/proposed_bayes_factor) *  temp))
if (!is.na(p)){
if (u < p){
pi_sigma[s] = proposed_sigma
pi_mu[s] = proposed_mu
pi_likelihood[s] = proposed_bayes_factor
pi_bf[s] = proposed_bayes_factor
}
}
if (s %% 100 == 0){
print(paste(s, "/", n_steps))
}
}
posterior = data.frame(mu=pi_mu, sigma=pi_sigma, l=pi_likelihood)
return(posterior)
}
n_pops = 20
environment_across_sites = runif(n_pops)
locations = runif(n_pops*2)
dim(locations) = c(n_pops,2)
df = simulate_occupancy(environment_across_sites,0.1, 0.75, num_data_points=50)
df %>% glimpse()
post = sampler(df, 1000)
hist(post$mu, breaks=25)
hist(post$sigma, breaks=25)
plot(seq(1,length(post$l)) , log(post$l) )
hist(post$mu, breaks=25)
df = simulate_occupancy(environment_across_sites,0.1, 0.3, num_data_points=50)
df %>% glimpse()
post = sampler(df, 1000)
hist(post$mu, breaks=25)
hist(post$sigma, breaks=25)
plot(seq(1,length(post$l)) , log(post$l) )
hist(post$mu, breaks=25)
hist(post$sigma, breaks=25)
plot(seq(1,length(post$l)) , log(post$l) )
df = simulate_occupancy(environment_across_sites,0.3, 0.3, num_data_points=50)
df %>% glimpse()
post = sampler(df, 1000)
hist(post$mu, breaks=25)
hist(post$sigma, breaks=25)
plot(seq(1,length(post$l)) , log(post$l) )
setwd("~/phase_transitions_in_metapopulation_synchrony/figs/figure3_2population_phase_transition/output")
library(tidyverse)
library(ggthemr)
library(latex2exp)
library(extrafont)
loadfonts()
ggthemr('fresh', spacing=2)
cmuserif = pdfFonts()$`CMU Serif`$family
thm = theme(panel.border = element_rect(colour = "#222222", fill = NA, size=0.75),
panel.spacing=unit(3, "lines"),
text=element_text(family=cmuserif,size=20), axis.title.y = element_text(angle = 0, vjust=0.5),
axis.title = element_text(margin = margin(t = 20, r = 20, b = 0, l = 0)),
axis.text = element_text(size=14),
panel.grid = element_line(size=0.5, linetype="dotted"),
# The new stuff
strip.text = element_text(size = 22),
strip.text.y = element_text(size = 22, angle = 0, vjust=0.5))
data = read.csv('metadata.csv') %>% full_join(read.csv('treatment_set.csv'), by="treatment")
data %>%
group_by(treatment) %>%
filter(lambda==1.0, sigma==0.5) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(replicate) )) +
geom_line(size=1,alpha=0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0.0, 0.25 ,0.5, 0.75, 1.0)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$")) +
thm +
facet_grid(vars(sigma), vars(lambda)) +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0,1))
convert_to_tex_label = function(string) {
return(TeX(string))
}
data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(lambda_facet = paste("$\\lambda =", lambda)) %>%
mutate(sigma_facet = paste("$\\sigma =", sigma)) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(sigma))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(sigma)), size=0.5, linetype='dashed',) +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
theme(aspect.ratio = 1, legend.position='none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25, 0.5,0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\sigma$"), fill=TeX("$\\sigma$")) +
facet_grid(vars(sigma_facet), vars(lambda_facet), labeller =as_labeller(convert_to_tex_label, label_parsed)) + thm
data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(lambda_facet = paste("$\\lambda =", lambda)) %>%
mutate(sigma_facet = paste("$\\sigma =", sigma)) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(sigma))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(sigma)), size=0.5, linetype='dashed',) +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
theme(aspect.ratio = 1, legend.position='none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25, 0.5,0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\sigma$"), fill=TeX("$\\sigma$")) +
facet_grid(vars(sigma_facet), vars(lambda_facet), labeller =as_labeller(convert_to_tex_label, label_parsed)) + thm
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure2.png"
data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(lambda_facet = paste("$\\lambda =", lambda)) %>%
mutate(sigma_facet = paste("$\\sigma =", sigma)) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(sigma))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(sigma)), size=0.5, linetype='dashed',) +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
theme(aspect.ratio = 1, legend.position='none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25, 0.5,0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\sigma$"), fill=TeX("$\\sigma$")) +
facet_grid(vars(sigma_facet), vars(lambda_facet), labeller =as_labeller(convert_to_tex_label, label_parsed)) + thm
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(lambda_facet = paste("$\\lambda =", lambda)) %>%
mutate(sigma_facet = paste("$\\sigma =", sigma)) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(sigma))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(sigma)), size=0.5, linetype='dashed',) +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
theme(aspect.ratio = 1, legend.position='none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25, 0.5,0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\sigma$"), fill=TeX("$\\sigma$")) +
facet_grid(vars(sigma_facet), vars(lambda_facet), labeller =as_labeller(convert_to_tex_label, label_parsed)) + thm
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure2.png"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 12, units = "in", device=PNG())
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 12, units = "in", device=png())
setwd("~/phase_transitions_in_metapopulation_synchrony/figs/figure3_2population_phase_transition/output")
library(tidyverse)
library(ggthemr)
library(latex2exp)
library(extrafont)
loadfonts()
ggthemr('fresh', spacing=2)
cmuserif = pdfFonts()$`CMU Serif`$family
thm = theme(panel.border = element_rect(colour = "#222222", fill = NA, size=0.75),
panel.spacing=unit(3, "lines"),
text=element_text(family=cmuserif,size=20), axis.title.y = element_text(angle = 0, vjust=0.5),
axis.title = element_text(margin = margin(t = 20, r = 20, b = 0, l = 0)),
axis.text = element_text(size=14),
panel.grid = element_line(size=0.5, linetype="dotted"),
# The new stuff
strip.text = element_text(size = 22),
strip.text.y = element_text(size = 22, angle = 0, vjust=0.5))
data = read.csv('metadata.csv') %>% full_join(read.csv('treatment_set.csv'), by="treatment")
data %>%
group_by(treatment) %>%
filter(lambda==1.0, sigma==0.5) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(replicate) )) +
geom_line(size=1,alpha=0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0.0, 0.25 ,0.5, 0.75, 1.0)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$")) +
thm +
facet_grid(vars(sigma), vars(lambda)) +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0,1))
convert_to_tex_label = function(string) {
return(TeX(string))
}
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(lambda_facet = paste("$\\lambda =", lambda)) %>%
mutate(sigma_facet = paste("$\\sigma =", sigma)) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(sigma))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(sigma)), size=0.5, linetype='dashed',) +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc, fill=factor(sigma)), size=1,alpha=0.4) +
theme(aspect.ratio = 1, legend.position='none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25, 0.5,0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\sigma$"), fill=TeX("$\\sigma$")) +
facet_grid(vars(sigma_facet), vars(lambda_facet), labeller =as_labeller(convert_to_tex_label, label_parsed)) + thm
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure2.png"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 12, units = "in", device=png())
# coord_cartesian(xlim = c(0.0,1.0))
setwd("~/phase_transitions_in_metapopulation_synchrony/figs/figure4_20population_phase_transition_varying_alpha/output")
library(tidyverse)
library(ggthemr)
library(latex2exp)
library(extrafont)
loadfonts()
ggthemr('fresh', spacing=3)
cmuserif = pdfFonts()$`CMU Serif`$family
thm = theme(panel.border = element_rect(colour = "#222222", fill = NA, size=0.75),
panel.spacing=unit(3, "lines"),
text=element_text(family=cmuserif,size=20), axis.title.y = element_text(angle = 0, vjust=0.5),
axis.title = element_text(margin = margin(t = 20, r = 20, b = 0, l = 0)),
axis.text = element_text(size=14),
panel.grid = element_line(size=1, linetype="dotted"),
# The new stuff
strip.text = element_text(size = 22),
strip.text.y = element_text(size = 22, angle = 0, vjust=0.5))
data = read.csv('metadata.csv') %>% full_join(read.csv('treatment_set.csv'), by="treatment")
data %>%
group_by(treatment) %>%
filter(lambda==1.0, sigma==0.5) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(replicate) )) +
geom_line(size=1,alpha=0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0.0, 0.25 ,0.5, 0.75, 1.0)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$")) +
thm +
facet_grid(vars(sigma), vars(alpha)) +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0,1))
convert_to_tex_label = function(string) {
return(TeX(string))
}
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(alpha_facet = paste("$\\alpha =$", alpha)) %>%
arrange(alpha) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(alpha), fill=factor(alpha))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(alpha)), size=0.5, linetype='dashed') +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc), size=1,alpha=0.4) +
theme_minimal() +
theme(aspect.ratio = 1, legend.position = 'none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25,0.5, 0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$"), fill=TeX("$\\alpha$")) +
facet_wrap(. ~ alpha_facet, labeller=as_labeller(convert_to_tex_label, label_parsed), ncol=2) +
thm +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0.0,1.0))
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure4.pdf"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 8, units = "in", device=cairo_pdf)
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure4.png"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 8, units = "in", device=png())
setwd("~/phase_transitions_in_metapopulation_synchrony/figs/figure4_20population_phase_transition_varying_alpha/output")
library(tidyverse)
library(ggthemr)
library(latex2exp)
library(extrafont)
loadfonts()
ggthemr('fresh', spacing=3)
cmuserif = pdfFonts()$`CMU Serif`$family
thm = theme(panel.border = element_rect(colour = "#222222", fill = NA, size=0.75),
panel.spacing=unit(3, "lines"),
text=element_text(family=cmuserif,size=20), axis.title.y = element_text(angle = 0, vjust=0.5),
axis.title = element_text(margin = margin(t = 20, r = 20, b = 0, l = 0)),
axis.text = element_text(size=14),
panel.grid = element_line(size=1, linetype="dotted"),
# The new stuff
strip.text = element_text(size = 22),
strip.text.y = element_text(size = 22, angle = 0, vjust=0.5))
data = read.csv('metadata.csv') %>% full_join(read.csv('treatment_set.csv'), by="treatment")
data %>%
group_by(treatment) %>%
filter(lambda==1.0, sigma==0.5) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(replicate) )) +
geom_line(size=1,alpha=0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0.0, 0.25 ,0.5, 0.75, 1.0)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$")) +
thm +
facet_grid(vars(sigma), vars(alpha)) +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0,1))
convert_to_tex_label = function(string) {
return(TeX(string))
}
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(alpha_facet = paste("$\\alpha =$", alpha)) %>%
arrange(alpha) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(alpha), fill=factor(alpha))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(alpha)), size=0.5, linetype='dashed') +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc), size=1,alpha=0.4) +
theme_minimal() +
theme(aspect.ratio = 1, legend.position = 'none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25,0.5, 0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$"), fill=TeX("$\\alpha$")) +
facet_wrap(. ~ alpha_facet, labeller=as_labeller(convert_to_tex_label, label_parsed), ncol=2) +
thm +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0.0,1.0))
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure4.png"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 8, units = "in", device=png())
setwd("~/phase_transitions_in_metapopulation_synchrony/figs/figure4_20population_phase_transition_varying_alpha/output")
library(tidyverse)
library(ggthemr)
library(latex2exp)
library(extrafont)
loadfonts()
ggthemr('fresh', spacing=3)
cmuserif = pdfFonts()$`CMU Serif`$family
thm = theme(panel.border = element_rect(colour = "#222222", fill = NA, size=0.75),
panel.spacing=unit(3, "lines"),
text=element_text(family=cmuserif,size=20), axis.title.y = element_text(angle = 0, vjust=0.5),
axis.title = element_text(margin = margin(t = 20, r = 20, b = 0, l = 0)),
axis.text = element_text(size=14),
panel.grid = element_line(size=1, linetype="dotted"),
# The new stuff
strip.text = element_text(size = 22),
strip.text.y = element_text(size = 22, angle = 0, vjust=0.5))
data = read.csv('metadata.csv') %>% full_join(read.csv('treatment_set.csv'), by="treatment")
data %>%
group_by(treatment) %>%
filter(lambda==1.0, sigma==0.5) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(replicate) )) +
geom_line(size=1,alpha=0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0.0, 0.25 ,0.5, 0.75, 1.0)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$")) +
thm +
facet_grid(vars(sigma), vars(alpha)) +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0,1))
convert_to_tex_label = function(string) {
return(TeX(string))
}
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(alpha_facet = paste("$\\alpha =$", alpha)) %>%
arrange(alpha) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(alpha), fill=factor(alpha))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(alpha)), size=0.5, linetype='dashed') +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc), size=1,alpha=0.4) +
theme_minimal() +
theme(aspect.ratio = 1, legend.position = 'none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25,0.5, 0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$"), fill=TeX("$\\alpha$")) +
facet_wrap(. ~ alpha_facet, labeller=as_labeller(convert_to_tex_label, label_parsed), ncol=2) +
thm +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0.0,1.0))
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure4.png"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 8, units = "in", device=png())
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(alpha_facet = paste("$\\alpha =$", alpha)) %>%
arrange(alpha) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(alpha), fill=factor(alpha))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(alpha)), size=0.5, linetype='dashed') +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc), size=1,alpha=0.4) +
theme_minimal() +
theme(aspect.ratio = 1, legend.position = 'none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25,0.5, 0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$"), fill=TeX("$\\alpha$")) +
facet_wrap(. ~ alpha_facet, labeller=as_labeller(convert_to_tex_label, label_parsed), ncol=2) +
thm +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0.0,1.0))
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(alpha_facet = paste("$\\alpha =$", alpha)) %>%
arrange(alpha) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(alpha), fill=factor(alpha))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(alpha)), size=0.5, linetype='dashed') +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc), size=1,alpha=0.4) +
theme_minimal() +
theme(aspect.ratio = 1, legend.position = 'none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25,0.5, 0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$"), fill=TeX("$\\alpha$")) +
facet_wrap(. ~ alpha_facet, labeller=as_labeller(convert_to_tex_label, label_parsed), ncol=2) +
thm +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0.0,1.0))
output_path = "~/phase_transitions_in_metapopulation_synchrony/writing/figs/figure4.png"
ggsave(output_path, plot=plt, dpi=320, width = 12, height = 8, units = "in", device=png())
plt
plt = data %>%
group_by(treatment) %>%
mutate(mean_pcc = mean(summary_stat)) %>%
mutate(lowest_pcc = quantile(summary_stat, probs=c(0.025))) %>%
mutate(lower_pcc = quantile(summary_stat, probs=c(0.25))) %>%
mutate(higher_pcc = quantile(summary_stat, probs=c(0.75))) %>%
mutate(highest_pcc = quantile(summary_stat, probs=c(0.975))) %>%
mutate(alpha_facet = paste("$\\alpha =$", alpha)) %>%
arrange(alpha) %>%
ggplot(aes(migration_rate, summary_stat, group=factor(alpha), fill=factor(alpha))) +
geom_ribbon(aes(ymin=lower_pcc, ymax=higher_pcc), size=1,alpha=0.4) +
geom_line(aes(y=mean_pcc, color=factor(alpha)), size=0.5, linetype='dashed') +
geom_ribbon(aes(ymin=lowest_pcc, ymax=highest_pcc), size=1,alpha=0.4) +
theme_minimal() +
theme(aspect.ratio = 1, legend.position = 'none') +
geom_hline(aes(yintercept=1), linetype='dashed',color='black') +
scale_x_continuous(limits = c(0.0,1), expand = c(0, 0), breaks = c(0, 0.25,0.5, 0.75, 1)) +
labs(title='', y=TeX("$PCC$"), x=TeX("$m$"), color=TeX("$\\alpha$"), fill=TeX("$\\alpha$")) +
facet_wrap(. ~ alpha_facet, labeller=as_labeller(convert_to_tex_label, label_parsed), ncol=2) +
thm +
coord_cartesian(xlim = c(0.0,1.0), ylim=c(0.0,1.0))
